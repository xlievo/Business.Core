<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebAPI</name>
    </assembly>
    <members>
        <member name="T:BusinessMember2">
            <summary>
            BusinessMember2。。。
            </summary>
        </member>
        <member name="P:BusinessMember2.Test001Result.A">
            <summary>
            aaa
            </summary>
        </member>
        <member name="P:BusinessMember2.Test001Result.B">
            <summary>
            bbb
            </summary>
        </member>
        <member name="M:BusinessMember2.Test001(Business.Auth.Token,Arg{Args.Test001},Arg{System.DateTime},System.Decimal,System.Object)">
            <summary>
            test doc Test001
            and Test001
            </summary>
            <param name="token">A token sample</param>
            <param name="arg"></param>
            <param name="mm">mmmmmmmm!</param>
            <returns></returns>
        </member>
        <member name="M:BusinessMember2.Test002(Business.Auth.Token,Arg{Args.Test001},System.Decimal)">
            <summary>
            
            </summary>
            <param name="token">A token sample</param>
            <param name="arg"></param>
            <param name="mm"></param>
            <returns>test return!!!</returns>
        </member>
        <member name="M:BusinessMember2.Test003(Business.Auth.Token,Arg{Args.Test001},System.Decimal)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="arg"></param>
            <param name="mm"></param>
            <returns></returns>
        </member>
        <member name="M:BusinessMember2.Test006(Arg{Args.Test001},Arg{System.Collections.Generic.List{System.String}})">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="arg2">arg2!!!</param>
            <returns></returns>
        </member>
        <member name="T:Args.MyEnum">
            <summary>
            MyEnumMyEnumMyEnumMyEnumMyEnumMyEnum
            </summary>
        </member>
        <member name="T:Args.Test001">
            <summary>
            Test001Test001Test001Test001Test001Test001
            </summary>
        </member>
        <member name="P:Args.Test001.AAA">
            <summary>
            AAA@@@
            </summary>
        </member>
        <member name="P:Args.Test001.A">
            <summary>
            AAAAAAAAAaaaaaaaaaaaaaaaaaaaaaaaAAAAAAA
            </summary>
        </member>
        <member name="P:Args.Test001.B">
            <summary>
            BBBBBBBBbbbbbbbbbbbbbbbbbBBBBBBBBBBBBBBBBBB
            </summary>
        </member>
        <member name="P:Args.Test001.C">
            <summary>
            CccccccccccccccccccccccccccCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
            </summary>
        </member>
        <member name="P:Args.Test001.Test0010.C1">
            <summary>
            C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1
            </summary>
        </member>
        <member name="P:Args.Test001.Test0010.C2">
            <summary>
            C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2
            </summary>
        </member>
        <member name="P:Args.Test001.Test0010.C3">
            <summary>
            C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3
            </summary>
        </member>
        <member name="T:Args.Test001.Test0010.Test0011">
            <summary>
            
            </summary>
        </member>
        <member name="P:Args.Test001.Test0010.Test0011.C31">
            <summary>
            
            </summary>
        </member>
        <member name="P:Args.Test001.Test0010.Test0011.C32">
            <summary>
            
            </summary>
        </member>
        <member name="P:Args.Test001.Test0010.Test0011.AAA">
            <summary>
            AAA@@@
            </summary>
        </member>
        <member name="T:Arg`1">
            <summary>
            This is a parameter package, used to transform parameters
            </summary>
            <typeparam name="OutType"></typeparam>
        </member>
        <member name="P:ReceiveData.a">
            <summary>
            business
            </summary>
        </member>
        <member name="P:ReceiveData.c">
            <summary>
            cmd
            </summary>
        </member>
        <member name="P:ReceiveData.t">
            <summary>
            token
            </summary>
        </member>
        <member name="P:ReceiveData.d">
            <summary>
            data
            </summary>
        </member>
        <member name="P:ReceiveData.b">
            <summary>
            callback
            </summary>
        </member>
        <member name="T:Host">
            <summary>
            Business constructor would match given arguments
            </summary>
        </member>
        <member name="T:BusinessController">
            <summary>
            A class for an MVC controller with view support.
            </summary>
        </member>
        <member name="M:BusinessController.Call(System.String)">
            <summary>
            Call
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:Swagger.Doc.Info.description">
            <summary>
            This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
            </summary>
        </member>
        <member name="P:Swagger.Doc.Info.version">
            <summary>
            1.0.0
            </summary>
        </member>
        <member name="P:Swagger.Doc.Info.title">
            <summary>
            Swagger Petstore
            </summary>
        </member>
        <member name="P:Swagger.Doc.ExternalDocs.description">
            <summary>
            Find out more
            </summary>
        </member>
        <member name="P:Swagger.Doc.ExternalDocs.url">
            <summary>
            http://swagger.io
            </summary>
        </member>
        <member name="P:Swagger.Doc.Tags.name">
            <summary>
            pet
            </summary>
        </member>
        <member name="P:Swagger.Doc.Tags.description">
            <summary>
            Everything about your Pets
            </summary>
        </member>
        <member name="P:Swagger.Doc.Tags.externalDocs">
            <summary>
            ExternalDocs
            </summary>
        </member>
        <member name="P:Swagger.Doc.Root.swagger">
            <summary>
            2.0
            </summary>
        </member>
        <member name="P:Swagger.Doc.Root.info">
            <summary>
            Info
            </summary>
        </member>
        <member name="P:Swagger.Doc.Root.host">
            <summary>
            localhost
            </summary>
        </member>
        <member name="P:Swagger.Doc.Root.basePath">
            <summary>
            /v1
            </summary>
        </member>
        <member name="P:Swagger.Doc.Root.tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:Swagger.Doc.Root.schemes">
            <summary>
            Schemes
            </summary>
        </member>
        <member name="P:Swagger.Doc.Root.paths">
            <summary>
            Paths
            </summary>
        </member>
        <member name="P:Swagger.Doc.Root.externalDocs">
            <summary>
            ExternalDocs
            </summary>
        </member>
    </members>
</doc>
